#pragma checksum "C:\Users\emir_\source\repos\CoreProjectCamp\CoreProjectCamp\Views\Author\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "14ca7291088e977d6170d517db9ee4ccabc2048b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Author_Index), @"mvc.1.0.view", @"/Views/Author/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\emir_\source\repos\CoreProjectCamp\CoreProjectCamp\Views\_ViewImports.cshtml"
using CoreProjectCamp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\emir_\source\repos\CoreProjectCamp\CoreProjectCamp\Views\_ViewImports.cshtml"
using CoreProjectCamp.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"14ca7291088e977d6170d517db9ee4ccabc2048b", @"/Views/Author/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6bb32bb38a03635894266d8c6ff858af981ab78c", @"/Views/_ViewImports.cshtml")]
    public class Views_Author_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "C:\Users\emir_\source\repos\CoreProjectCamp\CoreProjectCamp\Views\Author\Index.cshtml"
  
    Layout = "~/Areas/Admin/Views/Shared/_Admin_Layout_.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"<h4>Yazar Ajax İşlemleri</h4>
<div>

<button type=""button"" id=""btnGetList"" class=""btn btn-outline-primary"">Yazar Listesi</button>
<button type=""button"" id=""btnGetById"" class=""btn btn-outline-success"">Yazar Getir</button>
<button type=""button"" id=""btnAddAuthor"" class=""btn btn-outline-info"">Yazar Ekle</button>
<button type=""button"" id=""btndeleteAuthor"" class=""btn btn-outline-danger"">Yazar Sil</button>
<button type=""button"" id=""btnupdateAuthor"" class=""btn btn-outline-warning"">Yazar Güncelle</button>
</div>
<br />
<div id=""AuthorList"">
</div>

<div id=""AuthorGet"">
</div>

    <h4 >Yazar Bul</h4>
<div>
    <input type=""text"" class=""form-control"" id=""AuthorId"" placeholder=""Yazar ID"" />
</div>

<div>
    <h4 >Yazar Ekle</h4>
    <input type=""text"" id=""txtAuthorId"" class=""form-control"" placeholder=""Yazar ID"" />
    <br />
    <input type=""text"" id=""txtAuthorName"" class=""form-control"" placeholder=""Yazar Adı"" />
</div>
<br />
<div>
    <h4 >Yazar Sil</h4>
    <input type=""text"" id=""txtid"" ");
            WriteLiteral(@"class=""form-control"" placeholder=""Silinecek Yazar ID"" />
</div>
<br />
<h4 >Yazar Güncelle</h4>
<input type=""text"" class=""form-control"" id=""txtUpdateAuthorId"" placeholder=""Güncellenecek ID"" />
<br />
<input type=""text"" class=""form-control"" id=""txtUpdateAuthorName"" placeholder=""Güncellenecek İsim"" />

");
            DefineSection("scripts", async() => {
                WriteLiteral(@"
    <script>
        $(""#btnGetList"").click(function () {
            $.ajax({
                contentType: ""application/json"",
                dataType: ""json"",
                type: ""Get"",
                url: ""/Admin/Author/AuthorList"",
                success: function (func) {
                    let w = jQuery.parseJSON(func);                    
                    let tablehtml = ""<table class='table table-bordered' <tr><th>Yazar ID</th><th>Yazar Adı</th></tr> "";
                    $.each(w, (index, value) => {
                        tablehtml += `<tr><td>${value.Id}</td> <td>${value.Name}</td></tr>`
                    });
                    tablehtml += ""</table>""
                    $(""#AuthorList"").html(tablehtml);
                }
            })
        })
    </script>
    <script>
        $(""#btnGetById"").click(function () {
            let AuthorId = $(""#AuthorId"").val();            
            $.ajax({
                contentType: ""application/json"",
           ");
                WriteLiteral(@"     dataType: ""json"",
                type: ""Get"",
                url: ""/Admin/Author/GetAuthorByID/"",
                data: { AuthorId: AuthorId },
                success: function (func) {
                    let w = jQuery.parseJSON(func);                    
                    let getValue = `<table class=""table table-bordered""> <tr> <th>Yazar Id</th> <th>Yazar Adı</th></tr>
                            <tr><td>${w.Id}</td> <td>${w.Name}</td></tr></table>`
                    $(""#AuthorGet"").html(getValue);
                }
            });
        });
    </script>
    <script>
        $(""#btnAddAuthor"").click(function () {
            let Author = {
                Id: $(""#txtAuthorId"").val(),
                Name: $(""#txtAuthorName"").val()
            };
            $.ajax({
                type: ""post"",
                url: ""/Admin/Author/AddAuthor"",
                data: Author,
                success: function (func) {
                    let result = jQuery.parseJSON(fun");
                WriteLiteral(@"c);
                    alert(""Yeni yazar eklendi"");
                }
            });
        });
    </script>
    <script>
        $(""#btndeleteAuthor"").click(x => {
            let id = $(""#txtid"").val();
            $.ajax({
                type: ""post"",
                url: ""/Admin/Author/DeleteAuthor/"" + id,
                dataType: ""json"",
                success: function (func) {
                    alert(""Yazar Silindi"");
                }
            });
        });
    </script>
    <script>
        $(""#btnupdateAuthor"").click(function () {
            let Author = {
                Id: $(""#txtUpdateAuthorId"").val(),
                Name: $(""#txtUpdateAuthorName"").val()
            };
            $.ajax({
                type: ""post"",
                url: ""/Admin/Author/UpdateAuthor"",
                data: Author,
                success: function (func) {
                    alert(""Güncelleme yapıldı"");
                }
            });
        });
    </script");
                WriteLiteral(">\r\n");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
